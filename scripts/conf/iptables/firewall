#!/bin/bash
# Modificado por: Robson Vaamonde
# Site: www.procedimentosemti.com.br
# Facebook: facebook.com/ProcedimentosEmTI
# Facebook: facebook.com/BoraParaPratica
# YouTube: youtube.com/BoraParaPratica
# Data de criação: 14/09/2021
# Data de atualização: 17/09/2021
# Versão: 0.02
# Testado e homologado para a versão do Ubuntu Server 18.04.x LTS x64
# Kernel >= 4.15.x
# Testado e homologado para a versão do IPTables v1.6.x
#
# Script original criado por:
# Site: https://www.vivaolinux.com.br/artigo/Script-de-firewall-completissimo?pagina=1
# Site: https://gist.github.com/thomasfr/9712418
#
# Declaração de variáveis de Localização das Regras de Firewall e do Binário do IPTables
PATH=/sbin:/bin:/usr/sbin:/usr/bin
FIREWALL="/usr/bin/firewall"
RULES="/etc/firewall"
IPTABLES="/sbin/iptables"
#
# Declarando as variáveis das Portas Liberadas e Bloqueadas do IPTables
PORTSLIBTCP="$RULES/portslibtcp"            #Portas liberadas TCP
PORTSLIBUDP="$RULES/portslibudp"            #Portas liberadas UDP
PORTSBLO="$RULES/portsblo"                  #Portas bloqueadas
MULTIPORTSLIBTCP="$RULES/multiportslibtcp"  #Multiplas Portas Liberadas TCP
DNSSERVER="$RULES/dnsserver"                #Servidores DNS liberados
#
# Declarando as variáveis da Interfaces de Rede e Subrede do IPTables
LAN="enp0s3"           #Interface de Rede LAN
REDE="191.168.200.0/22"   #Endereço da Subrede
#
# opção da variável $1: Parâmetro número 1 (da linha de comando ou função)
case "$1" in
	#
	# Início do Script de Firewall IPTables, utilizando o comando case (opção: start)
	start)
	#
	# Mensagem de inicialização do Script de Firewall Netfilter/IPTables
	echo "========================================================================|"
	echo "|:INICIANDO AS CONFIGURAÇÕES DO FIREWALL NETFILTER ATRAVÉS DO IPTABLES: |"
	echo "========================================================================|"
	#
	# Desabilitando os erros de READ FPDMA QUEUED do Hard Disk
	echo 1 > /sys/block/sda/device/queue_depth
	#
	# Limpando todas as regras existente das Tabelas do IPTables
	# opções do comando iptables: -F (flush), -t (table), -X (delete-chain)
	# 
	# Tabela: Filter (INPUT, OUTPUT e FORWARD) - Opções da Tabela: (REJECT, ACCEPT, DROP e LOG)
	# Tabela: NAT (PREROUTING, POSTROUTING e OUTPUT) - Opções da Tabela: (SNAT, DNAT, MASQUERADE e REDIRECT)
	# Tabela: MANGLE (utiliza as Tabelas Filter e NAT) - Opções da Tabela: (PREROUTING, POSTROUTING, INPUT, OUTPUT e FORWARD)
	$IPTABLES -F
	$IPTABLES -F INPUT
	$IPTABLES -F OUTPUT
	$IPTABLES -F FORWARD
	$IPTABLES -t mangle -F
	$IPTABLES -t nat -F
	$IPTABLES -X
	echo "Limpando todas as Tabelas do IPTables..."
	echo -e "ON .............................................................[ OK ]\n"
	#
	# Zerando todo os contadores das cadeias de regras das Tabelas do IPTables
	# opções do comando iptables: -t (table), -Z (zero)
	$IPTABLES -t nat -Z
	$IPTABLES -t mangle -Z
	$IPTABLES -t filter -Z
	echo "Zerando todos os contadores das cadeiras do IPTables..."
	echo -e "ON .............................................................[ OK ]\n"
	#
	# Configurando as políticas padrão das Tabelas do IPTables
	# opções do comando iptables: -P (policy)
	$IPTABLES -P INPUT DROP
	$IPTABLES -P OUTPUT DROP
	$IPTABLES -P FORWARD DROP
	echo "Configurando as políticas padrão das das Tabelas do IPTables..."
	echo -e "ON .............................................................[ OK ]\n"
	#
	# Habilitando o Fluxo Interno entre os processos das Tabelas do IPTables
	# opções do comando iptables: -I (insert), -i (in-interface), -o (out-interface), 
	# lo (loopback), -j (jump)
	$IPTABLES -I INPUT -i lo -j ACCEPT
	$IPTABLES -I OUTPUT -o lo -j ACCEPT
	echo "Habilitando o Fluxo Interno entre os Processos das Tabelas do IPTables..."
	echo -e "ON .............................................................[ OK ]\n"
	# 
	# Habilitando o Log de todas as informações de INPUT e OUTPUT no arquivo: /var/log/firewall.log
	# opções do comando iptables: -A (append), -i (in-interface), -o (out-interface), -j (jump)
	$IPTABLES -A INPUT -i $LAN -j LOG --log-prefix "$LAN Trafego aceito de INPUT"
	$IPTABLES -A OUTPUT -o $LAN -j LOG --log-prefix "$LAN Trafego aceito de OUTPUT"
	echo "Habilitando o Log de todo o Tráfego de INPUT e OUTPUT do IPTables..."
	echo -e "ON .............................................................[ OK ]\n"
	#
	# Permitindo as atualizações do comando Apt-Get ou Apt no Ubuntu Server
	# opções do comando iptables: -A (append), -m (match), -p (protocol), -j (jump)
	$IPTABLES -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
	$IPTABLES -A OUTPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
	$IPTABLES -A OUTPUT -p tcp --dport 21 -m state --state NEW -j ACCEPT
	$IPTABLES -A OUTPUT -p tcp --dport 80 -m state --state NEW -j ACCEPT
	$IPTABLES -A OUTPUT -p tcp --dport 443 -m state --state NEW -j ACCEPT
	echo "Permitindo as atualizações do comando Apt-Get ou Apt no Ubuntu Server..."
	echo -e "ON .............................................................[ OK ]\n"
	#
	# Permitindo a Resolução de Nomes utilizando os Servidores DNS Liberados
	# Utilização de um Laço de Loop For para listar o conteúdo do arquivo: dnsserver
	# opções do comando iptables: -A (append), -I (insert), -p (protocol), -m (match), -d (destination), 
	# -s (source), -j (jump), -o (out-interface)
	for i in $(cat $DNSSERVER); do
		$IPTABLES -A OUTPUT -p udp -d $i --dport 53 -m state --state NEW,ESTABLISHED -j ACCEPT
		$IPTABLES -A INPUT  -p udp -s $i --sport 53 -m state --state ESTABLISHED -j ACCEPT
		$IPTABLES -A OUTPUT -p tcp -d $i --dport 53 -m state --state NEW,ESTABLISHED -j ACCEPT
		$IPTABLES -A INPUT  -p tcp -s $i --sport 53 -m state --state ESTABLISHED -j ACCEPT
	done
		$IPTABLES -I INPUT -m state --state ESTABLISHED -j ACCEPT
		$IPTABLES -I INPUT -m state --state RELATED -j ACCEPT
		$IPTABLES -I OUTPUT -p icmp -o $LAN -j ACCEPT
		$IPTABLES -I INPUT -p icmp -j ACCEPT
	echo "Permitindo a Resolução de Nomes utilizando os Servidores DNS Liberados..."
	echo -e "ON .............................................................[ OK ]\n"
	#
	# Permitindo todas as Portas TCP de Serviços instalados no Servidor Ubuntu
	# Utilização de um Laço de Loop For para listar o conteúdo do arquivo: portslibtcp
	# opções do comando iptables: -A (append), -I (insert), -p (protocol), -m (match), -j (jump), 
	# -o (out-interface)
	for i in $(cat $PORTSLIBTCP); do
		$IPTABLES -A INPUT -p tcp --dport $i -j ACCEPT
		$IPTABLES -A FORWARD -p tcp --dport $i -j ACCEPT
		$IPTABLES -A OUTPUT -p tcp --sport $i -j ACCEPT
	done
		$IPTABLES -I INPUT -m state --state ESTABLISHED -j ACCEPT
		$IPTABLES -I INPUT -m state --state RELATED -j ACCEPT
		$IPTABLES -I OUTPUT -p icmp -o $LAN -j ACCEPT
		$IPTABLES -I INPUT -p icmp -j ACCEPT
	echo "Permitindo todas as Portas TCP de Serviços instalados no Servidor Ubuntu..."
	echo -e "ON .............................................................[ OK ]\n"
	#
	# Permitindo Multiportas TCP de Serviços instalados no Servidor Ubuntu
	# Utilização de um Laço de Loop For para listar o conteúdo do arquivo: multiportslibtcp
	# opções do comando iptables: -A (append), -I (insert), -p (protocol), -m (match), -j (jump), 
	# -o (out-interface)
	for i in $(cat $MULTIPORTSLIBTCP); do
		$IPTABLES -A INPUT -p tcp -m multiport --ports $i -j ACCEPT
		$IPTABLES -A FORWARD -p tcp -m multiport --ports $i -j ACCEPT
		$IPTABLES -A OUTPUT -p tcp -m multiport --ports $i -j ACCEPT
	done
		$IPTABLES -I INPUT -m state --state ESTABLISHED -j ACCEPT
		$IPTABLES -I INPUT -m state --state RELATED -j ACCEPT
		$IPTABLES -I OUTPUT -p icmp -o $LAN -j ACCEPT
		$IPTABLES -I INPUT -p icmp -j ACCEPT
	echo "Permitindo Multiportas TCP de Serviços instalados no Servidor Ubuntu..."
	echo -e "ON .............................................................[ OK ]\n"
	#	
	# Permitindo todas as Portas UDP de Serviços instalados no Servidor Ubuntu
	# Utilização de um Laço de Loop For para listar o conteúdo do arquivo: portslibtcp
	# opções do comando iptables: -A (append), -I (insert), -p (protocol), -m (match), -j (jump), 
	# -o (out-interface)
	for i in $(cat $PORTSLIBUDP); do
		$IPTABLES -A INPUT -p udp --dport $i -j ACCEPT
		$IPTABLES -A FORWARD -p udp --dport $i -j ACCEPT
		$IPTABLES -A OUTPUT -p udp --sport $i -j ACCEPT
	done
		$IPTABLES -I INPUT -m state --state ESTABLISHED -j ACCEPT
		$IPTABLES -I INPUT -m state --state RELATED -j ACCEPT
		$IPTABLES -I OUTPUT -p icmp -o $LAN -j ACCEPT
		$IPTABLES -I INPUT -p icmp -j ACCEPT	
	echo "Permitindo todas as Portas UDP de Serviços instalados no Servidor Ubuntu..."
	echo -e "ON .............................................................[ OK ]\n"
	#
	# Aplicando a Segurança de Tentativa de Ataque do tipo Ping da Morte (ping of death)
	# opções do comando iptables: -N (new-chain), -A (append), -p (protocol), -m (match), -j (jump)
	echo "0" > /proc/sys/net/ipv4/icmp_echo_ignore_all
	$IPTABLES -N PING-MORTE
	$IPTABLES -A INPUT -p icmp --icmp-type echo-request -j PING-MORTE
	$IPTABLES -A PING-MORTE -m limit --limit 1/s --limit-burst 4 -j RETURN
	$IPTABLES -A PING-MORTE -j DROP
	echo "Aplicando a Segurança de Ataque do tipo Ping da Morte (ping of death)..."
	echo -e "ON .............................................................[ OK ]\n"
	#
	# Aplicando a Segurança de Tentativa de Ataque tipo Inundação SYN (Syn-Flooding)
	# opções do comando iptables: -N (new-chain), -A (append), -p (protocol), -m (match), -j (jump)
	# -i (in-interface)
	echo "0" > /proc/sys/net/ipv4/tcp_syncookies
	$IPTABLES -N syn-flood
	$IPTABLES -A INPUT -i $LAN -p tcp --syn -j syn-flood
	$IPTABLES -A syn-flood -m limit --limit 1/s --limit-burst 4 -j RETURN
	$IPTABLES -A syn-flood -j DROP
	echo "Aplicando a Segurança de Tentativa de Ataque tipo Inundação SYN (Syn-Flooding)..."
	echo -e "ON .............................................................[ OK ]\n"
	#
	# Aplicando a Segurança de Tentativa de Ataque do Tipo Força Bruta (Brute force)
	# opções do comando iptables: -N (new-chain), -A (append), -p (protocol), -m (match), -j (jump)
	# -i (in-interface)
	$IPTABLES -N SSH-BRUT-FORCE
	$IPTABLES -A INPUT -i $LAN -p tcp --dport 22 -j SSH-BRUT-FORCE
	$IPTABLES -A SSH-BRUT-FORCE -m limit --limit 1/s --limit-burst 4 -j RETURN
	$IPTABLES -A SSH-BRUT-FORCE -j DROP
	echo "Aplicando a Segurança de Tentativa de Ataque do Tipo Força Bruta (Brute force)..."
	echo -e "ON .............................................................[ OK ]\n"
	#
	# Bloqueando todas as Portas TCP e UDP de Serviços não instalados no Servidor Ubuntu
	# Utilização de um Laço de Loop For para listar o conteúdo do arquivo: portsblo
	# opções do comando iptables: -A (append), -p (protocol), -i (in-interface), -j (jump)
	for i in $(cat $PORTSBLO); do
		$IPTABLES -A INPUT -p tcp -i $LAN --dport $i -j DROP
		$IPTABLES -A INPUT -p udp -i $LAN --dport $i -j DROP
		$IPTABLES -A FORWARD -p tcp --dport $i -j DROP
	done
	echo "Bloqueando todas as Portas TCP e UDP de Serviços não instalados no Servidor Ubuntu..."
	echo -e "ON .............................................................[ OK ]\n"
	#
	# Aplicando a Segurança de Tentativa de Ataque do Tipo Remetentes Falsificados (IP-Spoofing)
	# opções do comando iptables: -A (append), -s (source), -i (in-interface), -j (jump)
	$IPTABLES -A INPUT -s 10.0.0.0/8 -i $LAN -j DROP
	$IPTABLES -A INPUT -s 127.0.0.0/8 -i $LAN -j DROP
	$IPTABLES -A INPUT -s 172.16.0.0/12 -i $LAN -j DROP
	$IPTABLES -A INPUT -s 192.168.1.0/16 -i $LAN -j DROP
	echo "Aplicando a Segurança de Tentativa de Ataque do Tipo Remetentes Falsificados (IP-Spoofing)..."
	echo -e "ON ............................................................[ OK ]\n"
	#
	# Aplicando a Segurança de Tentativa de Ataque do Tipo Scanners Ocultos (Stealth Scan)
	$IPTABLES -A FORWARD -p tcp --tcp-flags SYN,ACK, FIN,  -m limit --limit 1/s -j ACCEPT
	echo "Aplicando a Segurança de Tentativa de Ataque do Tipo Scanners Ocultos (Shealt Scan)..."
	echo -e "ON ............................................................[ OK ]\n"
	#
	# Habilitando os Log's de Bloqueio da Tabelas INPUT e OUTPUT no arquivo: /var/log/firewall.log
	$IPTABLES -A INPUT -j LOG  -m limit --limit 12/min --log-level 4 --log-prefix 'IP INPUT drop: '
	$IPTABLES -A INPUT -j DROP
	$IPTABLES -A OUTPUT -j LOG  -m limit --limit 12/min --log-level 4 --log-prefix 'IP OUTPUT drop: '
	$IPTABLES -A OUTPUT -j DROP
	echo "Habilitando os Log's de Bloqueio da Tabelas INPUT e OUTPUT no arquivo de Log..."
	echo -e "ON ............................................................[ OK ]\n"
	#
	echo "======================================================================|"
	echo ":TERMINADA AS CONFIGURAÇÕES DO FIREWALL NETFILTER ATRAVÉS DO IPTABLES:|"
	echo "======================================================================|"
	echo "FIREWALL ATIVADO - SISTEMA PREPARADO E FUNCIONANDO PERFEITAMENTE"
	echo "SCRIPT DE FIREWALL CRIADO POR :-) MARCELO MAGNO :-) - TODOS OS CRÉDITOS"
	echo "SCRIPT DE FIREWALL MODIFICADO POR: Robson Vaamonde - Procedimentos em TI ;-)"
	;;
	#
	# Início do Script de Firewall IPTables, utilizando o comando case (opção: stop)
	stop)
	#
	# Mensagem de paralisação do Script de Firewall Netfilter/IPTables
	echo "======================================================================|"
	echo "|:PARANDO AS CONFIGURAÇÕES DO FIREWALL NETFILTER ATRAVÉS DO IPTABLES: |"
	echo "======================================================================|"
	#
	# Limpando todas as regras existente das Tabelas do IPTables
	# opções do comando iptables: -F (flush), -t (table), -X (delete-chain), -Z (zero), -P (policy)
	$IPTABLES -F
	$IPTABLES -F INPUT
	$IPTABLES -F OUTPUT
	$IPTABLES -F FORWARD
	$IPTABLES -t mangle -F
	$IPTABLES -t nat -F
	$IPTABLES -X
	$IPTABLES -Z
	$IPTABLES -P INPUT ACCEPT
	$IPTABLES -P OUTPUT ACCEPT
	$IPTABLES -P FORWARD ACCEPT
	echo "Limpando todas as regras existente das Tabelas do IPTables..."
	echo -e "ON ............................................................[ OK ]\n"
	#
	echo "======================================================================|"
	echo ":TERMINADA AS CONFIGURAÇÕES DO FIREWALL NETFILTER ATRAVÉS DO IPTABLES:|"
	echo "======================================================================|"
	echo "FIREWALL INATIVO - SISTEMA PARADO E LIBERADO TODAS AS REGRAS"
	echo "SCRIPT DE FIREWALL CRIADO POR: MARCELO MAGNO :-) - TODOS OS CRÉDITOS"
	echo "SCRIPT DE FIREWALL MODIFICADO POR: Robson Vaamonde - Procedimentos em TI ;-)"
	;;
	#
	# Início do Script de Firewall IPTables, utilizando o comando case (opção: restart)
	restart)
	#
	# Mensagem de reinicialização do Script de Firewall Netfilter/IPTables
	echo "=========================================================================|"
	echo "|:REINICIANDO AS CONFIGURAÇÕES DO FIREWALL NETFILTER ATRAVÉS DO IPTABLES:|"
	echo "=========================================================================|"
	#
	# Executando as funções Stop e Start do Script de Firewall Netfilter/IPTables
	$FIREWALL stop
	$FIREWALL start
	;;
	#
	# Início do Script de Firewall IPTables, utilizando o comando case (opção: list)
	list)
	#
	# Mensagem de listagem do Script de Firewall Netfilter/IPTables
	echo "======================================================================|"
	echo "|   :LISTANDO AS REGRAS DE FIREWALL NETFILTER ATRAVÉS DO IPTABLES:    |"
	echo "|:PRESSIONE <ENTER> PARA LISTAR AS REGRAS DE FIREWALL E <Q> PARA SAIR |"
	echo "======================================================================|"
	read
	#
	# Listando todas as regras existente das Tabelas do IPTables
	# opções do comando iptables: -L (list), -v (verbose), -n (numeric)
	$IPTABLES -L -v -n | less
	#
	echo "======================================================================|"
	echo ":FIM DA LISTAGEM DAS REGRAS DE FIREWALL NETFILTER ATRAVÉS DO IPTABLES:|"
	echo "======================================================================|"
	echo "SCRIPT DE FIREWALL CRIADO POR: MARCELO MAGNO :-) - TODOS OS CRÉDITOS"
	echo "SCRIPT DE FIREWALL MODIFICADO POR: Robson Vaamonde - Procedimentos em TI ;-)"
	;;
	#
	# Início do Script de Firewall IPTables, utilizando o comando case (opção: *)	
	*)
	# opção do redirecionado >&2: Conecta a saída padrão na saída de erro
	# opção do comando echo: -e (habilita interpretação dos códigos de escape após barra invertida)
	# opção do comando echo: \033[1;31m (Vermelho Claro)
	# opção do comando tput: sgr0 (Restaura as configurações do video para o normal)
	# opção do comando exit: 0 (indica o térmico com êxito), 1 (indica o término sem êxito)
	echo "Utilize as opções do Firewall: $N {start|stop|restart|list}" >&2
	echo -e "\033[01;31m!!!!!!A T E N Ç Ã O!!!!!!";tput sgr0
	echo "Você não passou nenhum argumento para o script de Firewall, por padrão será executado a opção: restart em 5 segundo..."
	sleep 5
	$FIREWALL restart
	exit 1
# Fim do Script de Firewall IPTables, utilizando o comando case (opção: esac)
esac
exit 0